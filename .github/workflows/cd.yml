name: "Continuous Delivery"

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    branches:
      - main
    types:
      - completed

env:
  SERVICE_NAME: movies-api

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          service-account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Log in to Google Artifact Registry
        run: |
          gcloud config set project ${{ secrets.PROJECT_ID }}
          gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        id: build
        run: |
          IMAGE_TAG=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE_NAME }}-dev-repository/${{ secrets.SERVICE_NAME }}:$(git rev-parse --short HEAD)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker buildx create --use
          docker buildx build --platform linux/amd64 -t $IMAGE_TAG --push .

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.2

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

      - name: Apply Terraform
        env:
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
          TF_VAR_service_name: ${{ secrets.SERVICE_NAME }}
          TF_VAR_region: ${{ secrets.REGION }}
          TF_VAR_service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          TF_VAR_image_url: ${{ steps.build.outputs.IMAGE_TAG }}
          TF_VAR_google_client_id: ${{ secrets.GOOGLE_CLIENT_ID }}
          TF_VAR_google_client_secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          TF_VAR_sql_url: ${{ secrets.SQL_URL }}
          TF_VAR_mongo_url: ${{ secrets.MONGO_URL }}
          TF_VAR_data_repository: ${{ secrets.DATA_REPOSITORY }}
        run: terraform apply -auto-approve
